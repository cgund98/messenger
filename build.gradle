plugins {
    id 'application'
    id 'org.jetbrains.intellij' version '1.2.1'
    id 'groovy'
    id 'java'
    id 'com.google.protobuf' version '0.8.17'
    id "io.freefair.lombok" version "6.2.0"
}

group 'com.github.cgund98'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.8'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'io.grpc:grpc-netty-shaded:1.41.0'
    implementation 'io.grpc:grpc-protobuf:1.41.0'
    implementation 'io.grpc:grpc-services:1.41.0'
    implementation 'io.grpc:grpc-stub:1.41.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+

    implementation 'org.postgresql:postgresql:42.3.1'

    implementation 'com.auth0:java-jwt:3.18.2'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2021.2.3'
}
patchPluginXml {
    changeNotes = """
      Add change notes here.<br>
      <em>most HTML tags may be used</em>"""
}
test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.17.3"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.41.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}


// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false

//task serversServer(type: CreateStartScripts) {
//    mainClassName = 'com.github.cgund98.messenger.service.ServersServer'
//    applicationName = 'servers-svc'
//    outputDir = new File(project.buildDir, 'tmp')
//    classpath = startScripts.classpath
//}

task usersServer(type: CreateStartScripts) {
    mainClassName = 'com.github.cgund98.messenger.service.UsersServer'
    applicationName = 'users-svc'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
//    from(serversServer)
    from(usersServer)
    fileMode = 0755
}