syntax = "proto3";

// Java-specific options
option java_multiple_files = true;
option java_package = "com.github.cgund98.messenger.proto";
option java_outer_classname = "UsersProto";
option objc_class_prefix = "MSG";

package users;

message User {
  int32 id = 1;
  string username = 2;
}

// Request body for creating a new user
message CreateUserRequest {
  string username = 1;
}

// Response payload for creating a new user
message CreateUserResponse {
  string username = 2;
}

// Request body for listing all users
message ListUsersRequest {}

// Response payload for listing all users
message ListUsersResponse {
  repeated User users = 1;
}

// Request body for fetching one user by its ID
message GetUserRequest {
  int32 id = 1;
}

// Request body for updating a user
message UpdateUserRequest {
  int32 id = 1;
  optional string username = 2;
}

// Request body for logging in as a specific user.  Since this is an experimental project,
// no passwords will be used to authenticate.
message LoginRequest {
  int32 id = 1;
}

// Response payload for logging in as a user.  Should contain a newly created JWT that will
// be used to authenticate with all other services.
message LoginResponse {
  string token = 1; // JWT
}

// Users gRPC service definition
service UsersSvc {
  rpc CreateUser(CreateUserRequest) returns (User) {}
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
  rpc GetUser(GetUserRequest) returns (User) {}
  rpc UpdateUser(UpdateUserRequest) returns (User) {}
  rpc Login(LoginRequest) returns (LoginResponse) {}
}